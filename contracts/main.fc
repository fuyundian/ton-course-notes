#include "imports/stdlib.fc";

() recv_internal(int msg_value, cell in_msg, slice in_msg_body) impure {
    slice sc = in_msg.begin_parse();
    int flags = sc~load_uint(4);
    slice sender_address = sc~load_msg_addr();
    int op = in_msg_body~load_uint(32);
    if(op == 1){
        ;; 编译计数器逻辑
        slice ds = get_data().begin_parse();
        int counter_value = ds~load_uint(32);
        set_data(begin_cell().store_uint(counter_value + 1,32).store_slice(sender_address).end_cell());
        return ();
    }

    return ();
}  

slice get_the_latest_sender() method_id {
    slice ds = get_data().begin_parse();
    return ds~load_msg_addr();
}

(int,slice) get_contract_store_data() method_id {
    slice ds = get_data().begin_parse();
    return (
        ds~load_uint(32),
        ds~load_msg_addr()
    );
}